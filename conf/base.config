process {
    // Default process values
    time = 1.h
    memory = 1.Gb
    cpus = 1

    // Error strategy
    errorStategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'terminate' }
    maxRetries = 3
    maxErrors = '-1'


    /*
    Single core:
    */

    withLabel: 'singleCore_low' {
        time = { check_resources( 2.h * task.attempt, params.max_time) }
        memory = { check_resources(4.Gb * task.attempt, params.max_memory) }
        cpus = 1
    }

    withLabel: 'singleCore_med' {
        time = { check_resources( 12.h * task.attempt, params.max_time) }
        memory = { check_resources(16.Gb * task.attempt, params.max_memory) }
        cpus = 1
    }

    withLabel: 'singleCore_high' {
        time = { check_resources( 24.h * task.attempt, params.max_time) }
        memory = { check_resources(50.Gb * task.attempt, params.max_memory) }
        cpus = 1
    }


    /*
    Parallel: High cores, low memory and time
    */
    
    withLabel: 'parallel_low' {
        time = { check_resources( 2.h * task.attempt, params.max_time) }
        memory = { check_resources(8.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(16 * task.attempt, params.max_cpus) }
    }

    withLabel: 'parallel_med' {
        time = { check_resources( 12.h * task.attempt, params.max_time) }
        memory = { check_resources(50.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(16 * task.attempt, params.max_cpus) }
    }

    withLabel: 'parallel_high' {
        time = { check_resources( 24.h * task.attempt, params.max_time) }
        memory = { check_resources(100.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(16 * task.attempt, params.max_cpus) }
    }

    /*
    Parallel: Max cores - balanced time/memory
    */
    
    withLabel: 'parallel_max_low' {
        time = { check_resources( 2.h * task.attempt, params.max_time) }
        memory = { check_resources(8.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(40 * task.attempt, params.max_cpus) }
    }

    withLabel: 'parallel_max_med' {
        time = { check_resources( 12.h * task.attempt, params.max_time) }
        memory = { check_resources(50.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(40 * task.attempt, params.max_cpus) }
    }

    withLabel: 'parallel_max_high' {
        time = { check_resources( 24.h * task.attempt, params.max_time) }
        memory = { check_resources(100.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(40 * task.attempt, params.max_cpus) }
    }

    /*
    Resource: Balanced cores + memory + time
    */

    withLabel: 'balanced_low' {
        time = { check_resources( 2.h * task.attempt, params.max_time) }
        memory = { check_resources(4.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(1 * task.attempt, params.max_cpus) }
    }

    withLabel: 'balanced_med' {
        time = { check_resources( 8.h * task.attempt, params.max_time) }
        memory = { check_resources(32.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(16 * task.attempt, params.max_cpus) }
    }

    withLabel: 'balanced_high' {
        time = { check_resources( 24.h * task.attempt, params.max_time) }
        memory = { check_resources(100.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(32 * task.attempt, params.max_cpus) }
    }

    /*
    Resource: High memory - single core
    */

    withLabel: 'highmem_singleCore_low' {
        time = { check_resources( 4.h * task.attempt, params.max_time) }
        memory = { check_resources(250.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(1 * task.attempt, params.max_cpus) }
    }

    withLabel: 'highmem_singleCore_med' {
        time = { check_resources( 12.h * task.attempt, params.max_time) }
        memory = { check_resources(250.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(1 * task.attempt, params.max_cpus) }
    }

    withLabel: 'highmem_singleCore_high' {
        time = { check_resources( 24.h * task.attempt, params.max_time) }
        memory = { check_resources(250.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(1 * task.attempt, params.max_cpus) }
    }


    /*
    Resource: High memory - multicore
    */

    withLabel: 'highmem_multiCore_low' {
        time = { check_resources( 4.h * task.attempt, params.max_time) }
        memory = { check_resources(250.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(8 * task.attempt, params.max_cpus) }
    }

    withLabel: 'highmem_multiCore_med' {
        time = { check_resources( 12.h * task.attempt, params.max_time) }
        memory = { check_resources(250.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(16 * task.attempt, params.max_cpus) }
    }

    withLabel: 'highmem_multiCore_high' {
        time = { check_resources( 24.h * task.attempt, params.max_time) }
        memory = { check_resources(250.Gb * task.attempt, params.max_memory) }
        cpus = { check_resources(30 * task.attempt, params.max_cpus) }
    }

}